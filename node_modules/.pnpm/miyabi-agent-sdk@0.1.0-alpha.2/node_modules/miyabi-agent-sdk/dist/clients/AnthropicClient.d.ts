/**
 * AnthropicClient - Claude Sonnet 4 API wrapper for Agent SDK
 *
 * Phase 8-1: Real API integration
 */
export interface IssueAnalysisResult {
    labels: string[];
    complexity: "small" | "medium" | "large" | "xlarge";
    estimatedEffort: "1h" | "4h" | "1d" | "3d" | "1w" | "2w";
    priority: "P0" | "P1" | "P2" | "P3";
    type: "bug" | "feature" | "refactor" | "docs" | "test" | "chore";
    reasoning: string;
}
export interface CodeGenerationResult {
    files: Array<{
        path: string;
        content: string;
        action: "create" | "modify" | "delete";
    }>;
    tests: Array<{
        path: string;
        content: string;
        action: "create" | "modify" | "delete";
    }>;
    qualityScore: number;
}
export interface CodeReviewResult {
    qualityScore: number;
    passed: boolean;
    issues: Array<{
        severity: "error" | "warning" | "info";
        file: string;
        line?: number;
        message: string;
    }>;
    suggestions: string[];
}
export interface TokenUsage {
    input: number;
    output: number;
}
/**
 * AnthropicClient for Agent SDK
 *
 * Provides Claude Sonnet 4 API integration for:
 * - Issue analysis (IssueAgent)
 * - Code generation (CodeGenAgent)
 * - Code review (ReviewAgent)
 */
export declare class AnthropicClient {
    private client;
    private model;
    constructor(apiKey?: string);
    /**
     * Analyze GitHub Issue with Claude Sonnet 4
     *
     * Used by IssueAgent for intelligent issue classification
     */
    analyzeIssue(title: string, body: string | null): Promise<IssueAnalysisResult & {
        tokensUsed: TokenUsage;
    }>;
    /**
     * Generate code with Claude Sonnet 4
     *
     * Used by CodeGenAgent for high-quality code generation
     */
    generateCode(requirements: string, context: string, language?: string): Promise<CodeGenerationResult & {
        tokensUsed: TokenUsage;
    }>;
    /**
     * Review code with Claude Sonnet 4
     *
     * Used by ReviewAgent for quality assessment
     */
    reviewCode(files: Array<{
        path: string;
        content: string;
    }>, standards: {
        minQualityScore: number;
        requireTests: boolean;
        securityScan: boolean;
    }): Promise<CodeReviewResult & {
        tokensUsed: TokenUsage;
    }>;
    /**
     * Build prompt for issue analysis
     */
    private buildIssueAnalysisPrompt;
    /**
     * Build prompt for code generation
     */
    private buildCodeGenPrompt;
    /**
     * Build prompt for code review
     */
    private buildReviewPrompt;
    /**
     * Parse JSON from Claude response
     *
     * Handles responses with or without ```json``` code blocks
     */
    private parseJSON;
    /**
     * Calculate API cost (USD)
     *
     * Claude Sonnet 4 pricing (as of 2025-01):
     * - Input: $3 / 1M tokens
     * - Output: $15 / 1M tokens
     */
    calculateCost(tokensUsed: TokenUsage): number;
}
//# sourceMappingURL=AnthropicClient.d.ts.map