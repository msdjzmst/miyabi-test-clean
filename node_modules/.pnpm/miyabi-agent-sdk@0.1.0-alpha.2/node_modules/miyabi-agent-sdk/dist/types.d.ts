/**
 * Miyabi Agent SDK - Type Definitions
 *
 * 識学理論5原則に基づく型定義
 */
export interface TaskNode {
    id: string;
    description: string;
    agent: string;
    estimatedTime: number;
    dependencies: string[];
}
export interface TaskEdge {
    from: string;
    to: string;
}
export interface DAG {
    nodes: TaskNode[];
    edges: TaskEdge[];
}
export interface AgentInput {
    [key: string]: any;
}
export interface AgentOutput {
    success: boolean;
    data?: any;
    error?: string;
}
export interface IssueData {
    number: number;
    title: string;
    body: string | null;
    labels: string[];
    complexity: "small" | "medium" | "large" | "xlarge";
    priority: "P0" | "P1" | "P2" | "P3";
    type: "bug" | "feature" | "refactor" | "docs" | "test" | "chore";
}
export interface GeneratedFile {
    path: string;
    content: string;
    action: "create" | "modify" | "delete";
}
export interface QualityReport {
    qualityScore: number;
    passed: boolean;
    issues: Array<{
        severity: "error" | "warning" | "info";
        file: string;
        line?: number;
        message: string;
    }>;
    coverage: number;
    suggestions: string[];
}
export interface PullRequest {
    number: number;
    url: string;
    branch: string;
    status: "draft" | "open" | "merged";
}
export interface AgentMetrics {
    executionTime: number;
    qualityScore: number;
    successRate: number;
    costUsd: number;
}
//# sourceMappingURL=types.d.ts.map